name: Policy as Code

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  security-events: read
  contents: read
  pull-requests: write

jobs:
  policy-as-code:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Fetch Code Scanning Alerts
      id: fetch-alerts
      run: |
        echo "Fetching code scanning alerts from GitHub API..."
        alerts=$(curl -s -H "Accept: application/vnd.github+json" \
                      -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      -H "X-GitHub-Api-Version: 2022-11-28" \
                      https://api.github.com/repos/MyOrgHacker/Test2/code-scanning/alerts?state=open)
        
        echo "$alerts" | jq '.'

        CRITICAL_COUNT=$(echo "$alerts" | jq '[.[] | select(.rule.severity == "critical")] | length')
        echo "Critical count: $CRITICAL_COUNT"
        echo "::set-output name=critical_count::$CRITICAL_COUNT"

    - name: Fail if Critical Severity Alerts Found
      if: steps.fetch-alerts.outputs.critical_count != '0'
      run: |
        echo "Critical severity issues found. Failing the job."
        exit 1
